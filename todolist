#include<iostream>
#include<vector>
#include<string>
using namespace std;
struct Task
{
 string description;
 bool completed;
 Task(string des) : description(des), completed(false){}
};
void displayMenu();
void addTask(vector<Task> &tasks);
void viewTasks(const vector<Task> &tasks);
void markCompleted(vector<Task> &tasks);
void removeTask(vector<Task> &tasks);
int main()
{
    vector<Task> tasks;
    int choice;
    do{
        displayMenu();
        cin>>choice;
        switch(choice)
        {
            case 1:
            addTask(tasks);
            break;
            case 2:
            viewTasks(tasks);
            break;
            case 3:
            markCompleted(tasks);
            break;
            case 4:
            removeTask(tasks);
            break;
            case 5:
            cout<<"Exiting program."<<endl;
            break;
            default:
            cout<<"Invalid.Please try again."<<endl;
        }
    }while (choice!=5);
    return 0;
}

void displayMenu()
{
    cout<<"TO-DO LIST"<<endl;
    cout<<"1.Add Task"<<endl;
    cout<<"2.View Tasks"<<endl;
    cout<<"3.Mark Task as Completed"<<endl;
    cout<<"4.Remove Task"<<endl;
    cout<<"5. Exit"<<endl;
    cout<<"Enter your choice:"<<endl;
}
void addTask(vector<Task> &tasks)
{
    string description;
    cout<<"Enter task description:";
    cin.ignore();
    getline(cin, description);

    Task newTask(description);
    tasks.push_back(newTask);
    cout<<"Task added successfully."<<endl;

}
void viewTasks(const vector<Task> &tasks)
{
    cout<<"TASKS LIST"<<endl;
    if(tasks.empty()){
        cout <<"NO tasks found."<<endl;

    }
    else{
        for(size_t i=0;i<tasks.size(); ++i)
        {
            cout<<i+1<<".";
            if (tasks[i].completed)
            {
                cout<<"[Completed]";
            }
            else{
                cout<<"[Pending]";
            }
            cout<<tasks[i].description<<endl;
        }
    }
}
void markCompleted(vector<Task> &tasks)
{
    viewTasks(tasks);
    if(!tasks.empty())
    {
        int index;
        cout<<"Enter the index of the task so as to mark completed";
        cin>>index;
        if(index>=1 && index <=tasks.size()){
            tasks[index-1].completed=true;
            cout<<"Task Completed!"<<endl;
}
else{
    cout<<"Invalid index.Please try again."<<endl;
}   
 }
}
void removeTask(vector<Task> &tasks)
{
    viewTasks(tasks);
    if(!tasks.empty())
    {
        int index;
        cout<<"Enter the index of the task to be removed:";
        cin>>index;
        if(index>=1 && index<=tasks.size())
        {
            tasks.erase(tasks.begin()+index-1);
            cout<<"Task removed successfully."<<endl;

        }
        else{
            cout<<"Invalid index.Please try again."<<endl;
        }
    }
}
